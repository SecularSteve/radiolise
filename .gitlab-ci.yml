default:
  image: node:lts

workflow:
  rules:
    - if: $CI_COMMIT_REF_NAME == $CI_DEFAULT_BRANCH

variables:
  TRUSTED_PROJECT_ID: '2921423'
  RADIOLISE_METADATA_SOCKET: wss://backend.radiolise.com/api/data-service
  RADIOLISE_SITE_ADDRESS: backend.radiolise.com
  RADIOLISE_BUILD_TARGET: backend

packages:build:
  stage: build
  before_script:
    - corepack enable
    - corepack prepare pnpm@latest-8 --activate
    - pnpm config set store-dir .pnpm-store
  script:
    - pnpm -F './packages/*' install
    - pnpm -F './packages/*' build
  cache:
    - key:
        files:
          - pnpm-lock.yaml
      paths:
        - .pnpm-store
    - key: radiolise-build-cache
      paths:
        - node_modules
        - packages/**/dist
      policy: push

pages:
  stage: deploy
  image: alpine:latest
  needs:
    - packages:build
  script:
    - mv packages/radiolise/dist public
    - find public -type f -regex '.*\.\(htm\|html\|txt\|text\|js\|css\)$' -exec
      gzip -f -k {} \;
  cache:
    key: radiolise-build-cache
    paths:
      - packages/radiolise/dist
    policy: pull
  artifacts:
    paths:
      - public

packages:deploy:
  stage: deploy
  needs:
    - packages:build
  before_script:
    - corepack enable
    - corepack prepare pnpm@latest-8 --activate
    - pnpm config set -- //registry.npmjs.org/:_authToken=$NPM_TOKEN
  script:
    - pnpm changeset publish
  cache:
    key: radiolise-build-cache
    paths:
      - node_modules
      - packages/**/dist
    policy: pull
  rules:
    - if: $CI_PROJECT_ID == $TRUSTED_PROJECT_ID
      changes:
        - packages/*/package.json

server:deploy:
  stage: deploy
  image: docker:git
  needs: []
  tags:
    - deployment
  script:
    - ln -f sites/radiolise.com/Caddyfile Caddyfile
    - docker compose build
    - docker compose up -d
  rules:
    - if: $CI_PROJECT_ID == $TRUSTED_PROJECT_ID
